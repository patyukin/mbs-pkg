syntax = "proto3";

package credit_v1;

option go_package = "github.com/patyukin/mbs-pkg/pkg/proto/credit_v1;credit_v1";

import "error.proto";

// Статус заявки на кредит
enum CreditApplicationStatus {
  UNKNOWN_STATUS = 0;
  PENDING = 1;
  APPROVED = 2;
  REJECTED = 3;
}

// Статус кредита
enum CreditStatus {
  UNKNOWN_CREDIT_STATUS = 0;
  ACTIVE = 1;
  CLOSED = 2;
}

// Сервис кредитов
service CreditsServiceV1 {
  // Создание новой заявки на кредит
  rpc CreateCreditApplication(CreateCreditApplicationRequest) returns (CreateCreditApplicationResponse);

  // Подтверждение новой заявки на кредит
  rpc CreditApplicationConfirmation(CreditApplicationConfirmationRequest) returns (CreditApplicationConfirmationResponse);

  // Получение статуса заявки на кредит
  rpc GetCreditApplication(GetCreditApplicationRequest) returns (GetCreditApplicationResponse);

  // Обновление статуса заявки на кредит (например, одобрение или отклонение)
  rpc UpdateCreditApplicationStatus(UpdateCreditApplicationStatusRequest) returns (UpdateCreditApplicationStatusResponse);

  // Получение информации о кредите
  rpc GetCredit(GetCreditRequest) returns (GetCreditResponse);

  // Получение списка кредитов пользователя с пагинацией
  rpc GetListUserCredits(GetListUserCreditsRequest) returns (GetListUserCreditsResponse);

  // Получение графика платежей по кредиту
  rpc GetPaymentSchedule(GetPaymentScheduleRequest) returns (GetPaymentScheduleResponse);

  // Обновление статуса платежа в графике
  rpc UpdatePaymentStatus(UpdatePaymentStatusRequest) returns (UpdatePaymentStatusResponse);
}

// Сообщение запроса для создания новой заявки на кредит
message CreateCreditApplicationRequest {
  string user_id = 1;                    // UUID пользователя, подающего заявку
  int64 requested_amount = 2;            // Запрашиваемая сумма кредита
  int32 interest_rate = 3;               // Процентная ставка
  string start_date = 4;                 // Предполагаемая дата начала кредита
  string end_date = 5;                   // Предполагаемая дата окончания кредита
  string description = 6;                // Дополнительное описание или комментарии
}

// Сообщение ответа при создании заявки на кредит
message CreateCreditApplicationResponse {
  string message = 1;                    // Дополнительное сообщение
  error_v1.ErrorResponse error = 2;      // Сообщение об ошибке
}

// Сообщение запроса для подтверждения заявки на кредит
message CreditApplicationConfirmationRequest {
  string code = 1;                       // код для подтверждения заявки
  string user_id = 2;                    // UUID пользователя
}

// Сообщение ответа при подтверждении заявки на кредит
message CreditApplicationConfirmationResponse {
  string application_id = 1;             // UUID заявки
  CreditApplicationStatus status = 2;    // Статус заявки (обычно PENDING)
  string message = 3;                    // Дополнительное сообщение
}

// Сообщение запроса для получения статуса заявки на кредит
message GetCreditApplicationRequest {
  string application_id = 1;             // UUID заявки
  string user_id = 2;                    // UUID пользователя
}

// Сообщение ответа при получении статуса заявки на кредит
message GetCreditApplicationResponse {
  string application_id = 1;             // UUID заявки
  CreditApplicationStatus status = 2;    // Текущий статус заявки
  int64 approved_amount = 3;             // Одобренная сумма
  string decision_date = 4;              // Дата принятия решения
  string message = 5;                    // Дополнительное сообщение
  error_v1.ErrorResponse error = 6;      // Сообщение об ошибке
}

// Сообщение запроса для обновления статуса заявки (например, одобрение или отклонение)
message UpdateCreditApplicationStatusRequest {
  string application_id = 1;              // UUID заявки
  CreditApplicationStatus status = 2;     // Новый статус заявки (APPROVED или REJECTED)
  string decision_notes = 3;              // Примечания к решению
}

// Сообщение ответа при обновлении статуса заявки
message UpdateCreditApplicationStatusResponse {
  string message = 1;                    // Дополнительное сообщение
  error_v1.ErrorResponse error = 2;      // Сообщение об ошибке
}

// Сообщение запроса для получения информации о кредите
message GetCreditRequest {
  string credit_id = 1;                   // UUID кредита
  string user_id = 2;                     // UUID пользователя
}

// Сообщение ответа при получении информации о кредите
message GetCreditResponse {
  Credit credit = 1;                      // Информация о кредите
  error_v1.ErrorResponse error = 11;      // Сообщение об ошибке
}

// Сообщение запроса для получения всех кредитов пользователя
message GetListUserCreditsRequest {
  string user_id = 1;                     // UUID пользователя
  int32 page = 2;                         // Номер страницы (для пагинации)
  int32 limit = 3;                        // Размер страницы
}

// Сообщение ответа при получении списка кредитов пользователя
message GetListUserCreditsResponse {
  repeated Credit credits = 1;            // Список кредитов пользователя
  int32 current_page = 2;                 // Текущий номер страницы
  int32 total_pages = 3;                  // Общее количество страниц
  error_v1.ErrorResponse error = 4;       // Сообщение об ошибке
}

// Сообщение кредита
message Credit {
  string credit_id = 1;                   // UUID кредита
  string user_id = 2;                     // UUID пользователя
  int64 amount = 4;                       // Сумма кредита
  int64 interest_rate = 5;                // Процентная ставка
  int64 remaining_amount = 6;             // Остаток по кредиту
  CreditStatus status = 7;                // Статус кредита
  string start_date = 8;                  // Дата начала кредита
  string end_date = 9;                    // Дата окончания кредита
  string description = 10;                // Дополнительное описание или комментарии
}

// Сообщение запроса для получения графика платежей
message GetPaymentScheduleRequest {
  string credit_id = 1;                   // UUID кредита
  string user_id = 2;                     // UUID пользователя
}

// Сообщение ответа при получении графика платежей
message GetPaymentScheduleResponse {
  repeated PaymentSchedule schedules = 1; // Список платежей по графику
  error_v1.ErrorResponse error = 2;       // Сообщение об ошибке
}

// Сообщение графика платежей
message PaymentSchedule {
  string payment_id = 1;                  // UUID платежа
  int64 amount = 2;                       // Сумма платежа
  string due_date = 3;                    // Дата платежа
  PaymentStatus status = 4;               // Статус платежа
}

// Перечисление статусов платежей
enum PaymentStatus {
  UNKNOWN_PAYMENT_STATUS = 0;
  SCHEDULED = 1;
  PAID = 2;
  MISSED = 3;
  OVERPAID = 4;
  REFUNDED = 5;
}

// Сообщение запроса для обновления графика платежей
message UpdatePaymentStatusRequest {
  string payment_id = 1;                  // UUID платежа
  PaymentStatus status = 2;               // Новый статус платежа
}

// Сообщение ответа при обновлении графика платежей
message UpdatePaymentStatusResponse {
  string payment_id = 1;                  // UUID платежа
  PaymentStatus status = 2;               // Обновлённый статус платежа
  string message = 3;                     // Дополнительное сообщение
  error_v1.ErrorResponse error = 4;       // Сообщение об ошибке
}
